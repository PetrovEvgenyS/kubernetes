# Глобальное имя для всех объектов
name: "app" # для app
namePostgres: "postgres"  # для postgres

# Namespace settings
namespace:
  name: app-namespace
  create: true

# Deployment settings
replicaCount: 3
image:
  repository: petrovevgeny/my-php-app
  tag: "v2.0"
  pullPolicy: IfNotPresent

containers:
  name: my-php-app

resources:
  limits:
    cpu: "500m"      # 500 миллиядер, то есть 0.5 CPU
    memory: "256Mi"  # 256 мебибайт
  requests:
    cpu: "200m"      # 200 миллиядер, то есть 0.2 CPU
    memory: "128Mi"  # 128 мебибайт

labels:
  env: prod
  app: main
  owner: Evgeny

# Service settings
service:
  type: ClusterIP
  port: 3000
  targetPort: 80

# Ingress settings
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/add-base-url: "true"
  hosts:
    - host: app.lan
      paths:
        - path: /
          pathType: Prefix

# Postgres settings
postgres:
  enabled: true # Условия: каждый ресурс создается только если postgres.enabled: true.
  replicaCount: 1
  selector:
    matchLabels:
      components: postgres
  containers:
    name: postgres
  image:
    repository: postgres
    tag: "16.0"
    pullPolicy: IfNotPresent
  containerPort: 5432
  service:
    type: ClusterIP
    port: 5432
  envs:
    - POSTGRES_DB
    - POSTGRES_USER
    - POSTGRES_PASSWORD
  resources:
    limits:
      cpu: "1000m"
      memory: "500Mi"
    requests:
      cpu: "500m"
      memory: "256Mi"
  pvc:
    storage: "5Gi"
    accessMode: ReadWriteOnce
  initScript:
    enabled: true
    sql: |
      CREATE TABLE users (
          id SERIAL PRIMARY KEY,
          username VARCHAR(50) NOT NULL,
          email VARCHAR(100) NOT NULL UNIQUE,
          password VARCHAR(255) NOT NULL
      );