apiVersion: apps/v1   # Определяет API-версию, используемую для создания Deployment
kind: Deployment      # Указывает, что создается объект типа Deployment
metadata:             # Метаданные для Deployment
  name: my-web-deployment   # Имя развертывания (Deployment)
  labels:           # Метки, которые можно использовать для группировки и фильтрации ресурсов
    env: prod       # Метка окружения, указывает, что это продакшн
    app: main       # Метка, идентифицирующая приложение
    owner: Evgeny   # Метка владельца ресурса
spec:               # Основная спецификация Deployment
  replicas: 3       # Количество реплик (подов), которые должны быть запущены
  selector:         # Указывает, какие поды принадлежат этому Deployment
    matchLabels:    # Определяет соответствие меткам
      app: main     # Ищет поды с меткой app: main
  template:         # Шаблон для создаваемых подов
    metadata:       # Метаданные для подов
      labels:       # Метки, которые будут назначены подам
        app: main   # Метка для идентификации подов
    spec:           # Спецификация подов
      containers:   # Определяет список контейнеров внутри пода
        - name: my-php-app    # Имя контейнера в поде
          image: petrovevgeny/my-php-app:v1.0   # Docker-образ, который будет использоваться в контейнере
          ports:                  # Определяет список портов, которые контейнер будет слушать
            - containerPort: 80   # Открывает порт 80 внутри контейнера для входящих подключений
          resources:              # Определяет ограничения ресурсов для контейнера
            limits:               # Ограничения на использование ресурсов
              memory: "256M"      # Максимальное количество памяти, которое может использовать контейнер (256 мегабайт)
              cpu: "500m"         # Максимальное количество процессорного времени, которое может использовать контейнер (500 милли-CPU, что соответствует 0.5 CPU)

---
apiVersion: v1              # Определяет API-версию, используемую для создания Service
kind: Service               # Указывает, что создается объект типа Service
metadata:                   # Метаданные для Service
  name: my-single-service   # Имя сервиса
spec:                       # Основная спецификация Service
  type: LoadBalancer        # Тип сервиса создает внешний балансировщик нагрузки 
  ports:                    # Порты, которые сервис будет использовать
    - name: app-listener    # Имя порта для удобства
      protocol: TCP         # Протокол, используемый сервисом (TCP)
      port: 3000            # Порт, на котором сервис будет доступен. Порт сервиса внутри кластера.
      targetPort: 80        # Порт, на который сервис будет перенаправлять трафик (порт контейнера) с 3000 на 80. Порт контейнера внутри пода.
      nodePort: 31200       # Порт, который будет использоваться для доступа к сервису на узлах кластера из вне. Цепочка запроса: 31200 - 3000 - 80.
  selector:                 # Селектор для определения, к каким Pod будет направляться трафик
    app: main               # Метка, которая должна совпадать с метками в Pod (в данном случае, с меткой app: main)