apiVersion: apps/v1   # Определяет API-версию, используемую для создания Deployment
kind: Deployment      # Указывает, что создается объект типа Deployment
metadata:             # Метаданные для Deployment
  name: app-deployment      # Имя развертывания (Deployment)
  namespace: app-namespace  # Указывает, что Deployment создается в namespace "app-namespace".
  labels:           # Метки, которые можно использовать для группировки и фильтрации ресурсов
    env: prod       # Метка окружения, указывает, что это продакшн
    app: main       # Метка, идентифицирующая приложение
    owner: Evgeny   # Метка владельца ресурса
spec:               # Основная спецификация Deployment
  replicas: 3       # Количество реплик (подов), которые должны быть запущены
  selector:         # Указывает, какие поды принадлежат этому Deployment
    matchLabels:    # Определяет соответствие меткам
      app: main     # Ищет поды с меткой app: main
  template:         # Шаблон для создаваемых подов
    metadata:       # Метаданные для подов
      labels:       # Метки, которые будут назначены подам
        app: main   # Метка для идентификации подов
    spec:           # Спецификация подов
      containers:   # Определяет список контейнеров внутри пода
        - name: my-php-app        # Имя контейнера в поде
          image: petrovevgeny/my-php-app:v2.0   # Docker-образ, который будет использоваться в контейнере
          ports:                  # Определяет список портов, которые контейнер будет слушать
            - containerPort: 80   # Открывает порт 80 внутри контейнера для входящих подключений
          resources:              # Определяет ограничения ресурсов для контейнера
            limits:               # Определяет максимальное количество ресурсов, которое контейнер может использовать.
              memory: "128M"      # Максимальное количество памяти, которое может использовать контейнер (128 мегабайт)
              cpu: "500m"         # Максимальное количество процессорного времени, которое может использовать контейнер (500 милли-CPU, что соответствует 0.5 CPU)
            requests:             # Определяет минимальные ресурсы, которые гарантированно получит контейнер
              memory: 128M        # Минимальное количество оперативной памяти, которое гарантированно будет выделено контейнеру (128 мегабайт)
              cpu: 200m           # Минимальное количество процессорного времени, которое гарантированно будет выделено контейнеру (200 милли-CPU, что соответствует 0.2 CPU)